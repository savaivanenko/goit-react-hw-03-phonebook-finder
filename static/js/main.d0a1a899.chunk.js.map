{"version":3,"sources":["components/phonebook/Phonebook.js","components/phonebook/ContactList.js","components/phonebook/Filter.js","App.jsx","index.js"],"names":["Phonebook","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","newContact","id","uuidv4","props","onSubmit","reset","this","type","onChange","React","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","filter","deleteContact","prevState","addContact","newCont","find","i","console","log","alert","push","changeFilter","e","prevProps","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","normalizeFilter","toLowerCase","visibleContact","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a1a899.chunk.js","sourcesContent":["import React from 'react'; \nimport { v4 as uuidv4 } from 'uuid';\nimport styles from  './Phonebook.module.css';\n\nclass Phonebook extends React.Component{\n  state = { \n    name : '',\n    number : ''\n  }\n\n  handleChange = event =>{\n    const {name, value} = event.currentTarget;\n    this.setState({[name]: value})\n  }\n  handleSubmit = event =>{\n    event.preventDefault ();\n\n    const newContact = { \n      name: this.state.name, \n      id: uuidv4(),\n      number: this.state.number}\n      \n    this.props.onSubmit(newContact)\n    this.reset()\n  }\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  }\n  render (){\n\n    return(\n      <container>\n        <form onSubmit={this.handleSubmit}> \n          Phonebook   \n          <label> Name\n            <input type='text'  \n              name='name'\n              value={this.state.name} \n              onChange={this.handleChange}\n            />\n          </label> \n\n          <label> Number\n            <input type='text'  \n              name='number'\n              value={this.state.number} \n              onChange={this.handleChange}\n            />\n          </label> \n\n          <button \n            // className={s.button}\n            >Add contact</button> \n        </form>\n        \n        <h2>список контактов :</h2>\n        <ul>\n          \n        </ul>\n      </container>\n    )\n  }\n\n}\n\nexport default Phonebook","import React from 'react'; \n\nconst ContactList = ({contacts, onDeleteContact}) => (\n  <ul>\n    {contacts.map(({id, name, number }) =>(\n      <li key={id}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={()=>onDeleteContact(id)}>delete</button>\n\n      </li>\n    ))}\n  </ul>\n);\nexport default ContactList\n","import React from 'react'; \n\n const Filter =({value, onChange}) =>(\n   <label>\n     Поиск контакта\n     <input type=\"text\" value={value} onChange={onChange}/>\n   </label>\n )\n\n export default Filter;","import React from 'react'; \n// import Feedback from './components/Feedback/Feedback';\nimport Phonebook from './components/phonebook/Phonebook';\nimport ContactList from './components/phonebook/ContactList';\nimport Filter from './components/phonebook/Filter';\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    // name: '',\n    filter: '',\n  }\n  deleteContact = (id) =>{\n    this.setState(prevState =>({\n      contacts: prevState.contacts.filter(contacts => contacts.id !== id)\n    }))\n  }\n\n  addContact = newCont => {\n    const ku = this.state.contacts.find(i=>i.name === newCont.name)    \n    if (ku){      \n      console.log('ужо есть');\n      alert(`${newCont.name} уже есть`);\n      return\n    }\n\n    const newContacts = this.state.contacts;\n    newContacts.push(newCont)    \n    this.setState({['contacts']: [...this.state.contacts, newCont]})\n    console.log(this.state.contacts);\n  }\n\n  changeFilter = e =>{\n    this.setState({ filter: e.currentTarget.value});\n  };\n\n  deleteContact = (id) =>{\n    this.setState(prevState =>({\n      contacts: prevState.contacts.filter(contacts => contacts.id !== id)\n    }))\n  }\n\n  componentDidMount(prevProps, prevState){\n\n    const contacts = localStorage.getItem('contacts')\n    const parseContacts = JSON.parse(contacts)\n    if (parseContacts){\n      this.setState({contacts: parseContacts})\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  \n  \n\n  render(){\n    const { contacts, filter } = this.state;\n    \n    \n    const normalizeFilter = this.state.filter.toLowerCase();\n    const visibleContact = this.state.contacts.filter((contacts) => contacts.name.toLowerCase().includes(normalizeFilter))\n\n    return (\n      <div>\n     \n        <Phonebook onSubmit={this.addContact}/>\n\n        <Filter value={filter} onChange={this.changeFilter}/>\n\n        <ContactList contacts={visibleContact} onDeleteContact={this.deleteContact}/>\n        \n\n        \n  \n      </div>\n    )\n  }  \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}